% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/test_helper.R
\name{test_helper}
\alias{test_helper}
\title{Initialize a test helper object}
\usage{
test_helper(
  fn = getOption(".ensure_fn", default = "chat_claude"),
  ...,
  .ns = "elmer"
)
}
\arguments{
\item{fn}{A \verb{new_*()} function, likely from the elmer package. Defaults
to \code{\link[elmer:chat_claude]{elmer::chat_claude()}}. To set a persistent alternative default,
set the \code{.ensure_fn} option; see examples below.}

\item{...}{Additional arguments to \code{fn}. The \code{system_prompt} argument will
be ignored if supplied. To set persistent defaults,
set the \code{.ensure_args} option; see examples below.}

\item{.ns}{The package that the \verb{new_*()} function is exported from.}
}
\description{
Test helpers are elmer \link[elmer:Chat]{Chat()}s that know how to write testthat
unit tests. This function creates test helpers, though \code{\link[=test_this]{test_this()}} will create
test helpers it needs on-the-fly.
}
\details{
If you have an Anthropic API key (or another API key and the \verb{test_helper_*()}
options) set and this package installed, you are ready to using the addin
in any R session with no setup or library loading required; the addin knows
to look for your API credentials and will call needed functions by itself.
}
\examples{
\dontshow{if (FALSE) (if (getRversion() >= "3.4") withAutoprint else force)(\{ # examplesIf}
# to create a chat with claude:
test_helper()

# or with OpenAI's 4o-mini:
test_helper(
  "chat_openai",
  model = "gpt-4o-mini"
)

# to set OpenAI's 4o-mini as the default, for example, set the
# following options (possibly in your .Rprofile, if you'd like
# them to persist across sessions):
options(
  .ensure_fn = "chat_openai",
  .ensure_args = list(model = "gpt-4o-mini")
)
\dontshow{\}) # examplesIf}
}
